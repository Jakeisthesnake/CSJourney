#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.2 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 57 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 495 0 28 3 19 #"#lang simply-scheme"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"get-method"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 14 3 11 #"parent-list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 11 #"parent-list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 18 #"returned-procedure"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ask"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 11 #"parent-list"
0 0 24 3 2 #") "
0 0 14 3 7 #"message"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 18 #"returned-procedure"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 18 #"returned-procedure"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"get-method"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 11 #"parent-list"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 6 #"object"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 6 #"object"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 6 #"method"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 6 #"method"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"No method \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 12 #"\" in class \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"display"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 6 #"method"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 21 3 2 #"#f"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"banana-holder"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 22 #"list-of-banana-holders"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())) "
0 0 17 3 20 #";; class vars set up"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 13 #"class-message"
0 0 24 3 2 #") "
0 0 17 3 22 #";; class dispatch proc"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 13 #"class-message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 22 #"list-of-banana-holders"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"lambda"
0 0 24 3 4 #" () "
0 0 14 3 22 #"list-of-banana-holders"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 13 #"class-message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 15 3 11 #"instantiate"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 2 #") "
0 0 17 3 21 #";; Instantiation vars"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"self"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 17 3 16 #";; Instance vars"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 9 #"my-person"
0 0 24 3 3 #" (("
0 0 14 3 6 #"person"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 15 3 11 #"instantiate"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 9 #"my-person"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 14 #"my-fruit-lover"
0 0 24 3 3 #" (("
0 0 14 3 11 #"fruit-lover"
0 0 24 3 1 #" "
0 0 15 3 11 #"instantiate"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 14 #"my-fruit-lover"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"banana"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 7 #"bananas"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"dispatch"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 2 #") "
0 0 17 3 23 #";; Object dispatch proc"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 4 #"cond"
0 0 24 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"initialize"
0 0 24 3 2 #") "
0 0 17 3 21 #";; Initialize method:"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 14 #"value-for-self"
0 0 24 3 2 #") "
0 0 17 3 23 #";; set up self variable"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #" "
0 0 14 3 14 #"value-for-self"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 9 #"my-person"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"initialize"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 14 #"my-fruit-lover"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"initialize"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 22 #"list-of-banana-holders"
0 0 24 3 1 #" "
0 0 17 3 19 #";; user's init code"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #" "
0 0 14 3 22 #"list-of-banana-holders"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                       (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 20 #"send-usual-to-parent"
0 0 24 3 2 #") "
0 0 17 3 18 #";; How USUAL works"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 15 3 3 #"let"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                              (("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 10 #"get-method"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                  "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 9 #"my-person"
0 0 24 3 1 #" "
0 0 14 3 14 #"my-fruit-lover"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 7 #"method?"
0 0 24 3 1 #" "
0 0 14 3 6 #"method"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 6 #"method"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"No USUAL method\""
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 13 #"banana-holder"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                       (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 6 #"lambda"
0 0 24 3 4 #" () "
0 0 14 3 4 #"name"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                       (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"bananas"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 6 #"lambda"
0 0 24 3 4 #" () "
0 0 14 3 7 #"bananas"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                       (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 22 #"list-of-banana-holders"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 6 #"lambda"
0 0 24 3 4 #" () "
0 0 14 3 22 #"list-of-banana-holders"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                       (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 16 #"get-more-bananas"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"amount"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 7 #"bananas"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 7 #"bananas"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 17 3 15 #";; Else clause:"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 10 #"get-method"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                  "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 9 #"my-person"
0 0 24 3 1 #" "
0 0 14 3 14 #"my-fruit-lover"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 7 #"method?"
0 0 24 3 1 #" "
0 0 14 3 6 #"method"
0 0 24 3 2 #") "
0 0 17 3 26 #";; Try delegating...method"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"sorry"
0 0 24 3 7 #")))))) "
0 0 17 3 17 #";; default-method"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 8 #"dispatch"
0 0 24 3 5 #")))) "
0 0 17 3 43 #";; Class' instantiate;; proc returns object"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"Bad message to class\""
0 0 24 3 1 #" "
0 0 14 3 13 #"class-message"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 9       13855 21           0 0           0 2308 0 24 29 1 #"\n"
0 0 17 3 10 #";; ADV.SCM"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; This file contains the definitions for the objects in the adventu"
 #"re"
) 0 0 24 29 1 #"\n"
0 0 17 3 36 #";; game and some utility procedures."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"place"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 15 #"list-of-methods"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 4 #"name"
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 14 #"list-of-places"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())) "
0 0 17 3 20 #";; class vars set up"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 13 #"class-message"
0 0 24 3 2 #") "
0 0 17 3 22 #";; class dispatch proc"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 13 #"class-message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 14 #"list-of-places"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"lambda"
0 0 24 3 4 #" () "
0 0 14 3 14 #"list-of-places"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 13 #"class-message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 15 3 11 #"instantiate"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 2 #") "
0 0 17 3 21 #";; Instantiation vars"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"self"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 17 3 16 #";; Instance vars"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 24 #"directions-and-neighbors"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"things"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"people"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 11 #"entry-procs"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 10 #"exit-procs"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"dispatch"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 2 #") "
0 0 17 3 23 #";; Object dispatch proc"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 4 #"cond"
0 0 24 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"initialize"
0 0 24 3 2 #") "
0 0 17 3 21 #";; Initialize method:"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 14 #"value-for-self"
0 0 24 3 2 #") "
0 0 17 3 23 #";; set up self variable"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #" "
0 0 14 3 14 #"value-for-self"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 9 #"my-person"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"initialize"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 14 #"my-fruit-lover"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"initialize"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 22 #"list-of-banana-holders"
0 0 24 3 1 #" "
0 0 17 3 19 #";; user's init code"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #" "
0 0 14 3 22 #"list-of-banana-holders"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                       (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 20 #"send-usual-to-parent"
0 0 24 3 2 #") "
0 0 17 3 18 #";; How USUAL works"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 15 3 3 #"let"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                              (("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 10 #"get-method"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                        "
0 0 21 3 1 #"'"
0 0 14 3 13 #"banana-holder"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                        "
0 0 14 3 7 #"message"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                        "
0 0 14 3 9 #"my-person"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                        "
0 0 14 3 14 #"my-fruit-lover"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 7 #"method?"
0 0 24 3 1 #" "
0 0 14 3 6 #"method"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 6 #"method"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"Bad message to class\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 14 3 13 #"class-message"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 21 3 2 #"#f"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                       (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 6 #"lambda"
0 0 24 3 4 #" () "
0 0 14 3 4 #"name"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                       (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"bananas"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 6 #"lambda"
0 0 24 3 4 #" () "
0 0 14 3 7 #"bananas"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                       (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 22 #"list-of-banana-holders"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 6 #"lambda"
0 0 24 3 4 #" () "
0 0 14 3 22 #"list-of-banana-holders"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                       (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 16 #"get-more-bananas"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"amount"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 7 #"bananas"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 7 #"bananas"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 17 3 15 #";; Else clause:"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 10 #"get-method"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 21 3 1 #"'"
0 0 14 3 13 #"banana-holder"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 14 3 7 #"message"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 14 3 9 #"my-person"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 14 3 14 #"my-fruit-lover"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 7 #"method?"
0 0 24 3 1 #" "
0 0 14 3 6 #"method"
0 0 24 3 2 #") "
0 0 17 3 26 #";; Try delegating...method"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"sorry"
0 0 24 3 7 #")))))) "
0 0 17 3 17 #";; default-method"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 8 #"dispatch"
0 0 24 3 4 #"))) "
0 0 17 3 43 #";; Class' instantiate;; proc returns object"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"Bad message to class\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 14 3 13 #"class-message"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 21 3 2 #"#f"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";(define-class (place name)"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";  (instance-vars"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";   (directions-and-neighbors '())"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";   (things '())"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";   (people '())"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";   (entry-procs '())"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";   (exit-procs '()))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 4 #"type"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"place"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 9 #"neighbors"
0 0 24 3 3 #") ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 24 #"directions-and-neighbors"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 5 #"exits"
0 0 24 3 3 #") ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 24 #"directions-and-neighbors"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 7 #"look-in"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"pair"
0 0 24 3 2 #" ("
0 0 14 3 5 #"assoc"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 14 3 24 #"directions-and-neighbors"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 4 #"pair"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 24 3 23 #"()                     "
0 0 17 3 28 #";; nothing in that direction"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"pair"
0 0 24 3 15 #"))))           "
0 0 17 3 26 #";; return the place object"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 6 #"appear"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 4 #"memq"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-thing"
0 0 24 3 1 #" "
0 0 14 3 6 #"things"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 29 #"\"Thing already in this place\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-thing"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 6 #"things"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-thing"
0 0 24 3 1 #" "
0 0 14 3 6 #"things"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 1 #"'"
0 0 14 3 8 #"appeared"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 5 #"enter"
0 0 24 3 1 #" "
0 0 14 3 10 #"new-person"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 4 #"memq"
0 0 24 3 1 #" "
0 0 14 3 10 #"new-person"
0 0 24 3 1 #" "
0 0 14 3 6 #"people"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 30 #"\"Person already in this place\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 10 #"new-person"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 6 #"people"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 10 #"new-person"
0 0 24 3 1 #" "
0 0 14 3 6 #"people"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 8 #"for-each"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"proc"
0 0 24 3 3 #") ("
0 0 14 3 4 #"proc"
0 0 24 3 3 #")) "
0 0 14 3 11 #"entry-procs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 1 #"'"
0 0 14 3 8 #"appeared"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 4 #"gone"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 4 #"memq"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #" "
0 0 14 3 6 #"things"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 29 #"\"Disappearing thing not here\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 6 #"things"
0 0 24 3 2 #" ("
0 0 14 3 6 #"delete"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #" "
0 0 14 3 6 #"things"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 1 #"'"
0 0 14 3 11 #"disappeared"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 4 #"exit"
0 0 24 3 1 #" "
0 0 14 3 6 #"person"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 8 #"for-each"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"proc"
0 0 24 3 3 #") ("
0 0 14 3 4 #"proc"
0 0 24 3 3 #")) "
0 0 14 3 10 #"exit-procs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 4 #"memq"
0 0 24 3 1 #" "
0 0 14 3 6 #"person"
0 0 24 3 1 #" "
0 0 14 3 6 #"people"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 30 #"\"Disappearing person not here\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 6 #"person"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 6 #"people"
0 0 24 3 2 #" ("
0 0 14 3 6 #"delete"
0 0 24 3 1 #" "
0 0 14 3 6 #"person"
0 0 24 3 1 #" "
0 0 14 3 6 #"people"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 1 #"'"
0 0 14 3 11 #"disappeared"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 12 #"new-neighbor"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 14 3 8 #"neighbor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"assoc"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 14 3 24 #"directions-and-neighbors"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 39 #"\"Direction already assigned a neighbor\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 24 #"directions-and-neighbors"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 14 3 8 #"neighbor"
0 0 24 3 2 #") "
0 0 14 3 24 #"directions-and-neighbors"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 1 #"'"
0 0 14 3 9 #"connected"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 19 #"add-entry-procedure"
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 11 #"entry-procs"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 1 #" "
0 0 14 3 11 #"entry-procs"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 18 #"add-exit-procedure"
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 10 #"exit-procs"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 1 #" "
0 0 14 3 10 #"exit-procs"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 22 #"remove-entry-procedure"
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 11 #"entry-procs"
0 0 24 3 2 #" ("
0 0 14 3 6 #"delete"
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 1 #" "
0 0 14 3 11 #"entry-procs"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 21 #"remove-exit-procedure"
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 10 #"exit-procs"
0 0 24 3 2 #" ("
0 0 14 3 6 #"delete"
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 1 #" "
0 0 14 3 10 #"exit-procs"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 15 #"clear-all-procs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 10 #"exit-procs"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 11 #"entry-procs"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 1 #"'"
0 0 14 3 7 #"cleared"
0 0 24 3 3 #") )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 12 #"define-class"
0 0 24 3 2 #" ("
0 0 14 3 6 #"person"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 5 #"place"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"instance-vars"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 11 #"possessions"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 6 #"saying"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"initialize"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 5 #"place"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"enter"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 4 #"type"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 6 #"person"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 11 #"look-around"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 3 #") ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"name"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"thing"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 5 #"place"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"things"
0 0 24 3 3 #") ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 5 #"place"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"people"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 4 #"take"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"thing?"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"Not a thing\""
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"  (("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 4 #"memq"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 5 #"place"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"things"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 31 #"\"Thing taken not at this place\""
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 5 #"place"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"name"
0 0 24 3 2 #") "
0 0 14 3 5 #"thing"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"  (("
0 0 14 3 4 #"memq"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #" "
0 0 14 3 11 #"possessions"
0 0 24 3 3 #") ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"You already have it!\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"announce-take"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 11 #"possessions"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #" "
0 0 14 3 11 #"possessions"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"   "
0 0 17 3 41 #";; If somebody already has this object..."
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"for-each"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"pers"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 4 #"pers"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 3 #")) "
0 0 17 3 15 #"; ignore myself"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"memq"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 4 #"pers"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"possessions"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 4 #"pers"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"lose"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"have-fit"
0 0 24 3 1 #" "
0 0 14 3 4 #"pers"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 5 #"place"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"people"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 16 #"change-possessor"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"   "
0 0 21 3 1 #"'"
0 0 14 3 5 #"taken"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 4 #"lose"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 11 #"possessions"
0 0 24 3 2 #" ("
0 0 14 3 6 #"delete"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #" "
0 0 14 3 11 #"possessions"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 16 #"change-possessor"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"no-one"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 1 #"'"
0 0 14 3 4 #"lost"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 4 #"talk"
0 0 24 3 3 #") ("
0 0 14 3 5 #"print"
0 0 24 3 1 #" "
0 0 14 3 6 #"saying"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 8 #"set-talk"
0 0 24 3 1 #" "
0 0 14 3 6 #"string"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 6 #"saying"
0 0 24 3 1 #" "
0 0 14 3 6 #"string"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 5 #"exits"
0 0 24 3 3 #") ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 5 #"place"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"exits"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 6 #"notice"
0 0 24 3 1 #" "
0 0 14 3 6 #"person"
0 0 24 3 3 #") ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"talk"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 9 #"new-place"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 5 #"place"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"look-in"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-place"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 6 #"     ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Can't go\""
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 6 #"     ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 5 #"place"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"exit"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"announce-move"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 5 #"place"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-place"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 6 #"     ("
0 0 14 3 8 #"for-each"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 5 #"place"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"gone"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-place"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"appear"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 6 #"      "
0 0 14 3 11 #"possessions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 6 #"     ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"place"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-place"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 6 #"     ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-place"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"enter"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 7 #"))))) )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"no-method"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"no-method"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 13 #"class-message"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 13 #"class-message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 15 3 11 #"instantiate"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"self"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 5 #"()) ("
0 0 14 3 9 #"possessor"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"no-one"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"dispatch"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 9 #"       (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"initialize"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 14 #"value-for-self"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #" "
0 0 14 3 14 #"value-for-self"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 9 #"       (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 20 #"send-usual-to-parent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 35 #"\"Can't use USUAL without a parent.\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"thing"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 9 #"       (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"name"
0 0 24 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 24 3 4 #" () "
0 0 14 3 4 #"name"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 9 #"       (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"possessor"
0 0 24 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 24 3 4 #" () "
0 0 14 3 9 #"possessor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 9 #"       (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"type"
0 0 24 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 24 3 4 #" () "
0 0 21 3 1 #"'"
0 0 14 3 5 #"thing"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 9 #"       (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"message"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 16 #"change-possessor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 13 #"new-possessor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 9 #"possessor"
0 0 24 3 1 #" "
0 0 14 3 13 #"new-possessor"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 9 #"no-method"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"thing"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"    "
0 0 14 3 8 #"dispatch"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"Bad message to class\""
0 0 24 3 1 #" "
0 0 14 3 13 #"class-message"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;; Implementation of thieves for part two"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"*foods*"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 5 #"pizza"
0 0 24 3 1 #" "
0 0 14 3 11 #"potstickers"
0 0 24 3 1 #" "
0 0 14 3 6 #"coffee"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"edible?"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"member"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"name"
0 0 24 3 2 #") "
0 0 14 3 7 #"*foods*"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 12 #"define-class"
0 0 24 3 2 #" ("
0 0 14 3 5 #"thief"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 13 #"initial-place"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"parent"
0 0 24 3 2 #" ("
0 0 14 3 6 #"person"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 13 #"initial-place"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"instance-vars"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"behavior"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"steal"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 4 #"type"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"thief"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 6 #"notice"
0 0 24 3 1 #" "
0 0 14 3 6 #"person"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 8 #"behavior"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"run"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 11 #"pick-random"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ask"
0 0 24 3 2 #" ("
0 0 14 3 5 #"usual"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"place"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"exits"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 11 #"food-things"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 7 #"edible?"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 7 #"      ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"possessor"
0 0 24 3 2 #") "
0 0 14 3 4 #"self"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"ask"
0 0 24 3 2 #" ("
0 0 14 3 5 #"usual"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"place"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 6 #"things"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 11 #"food-things"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 7 #"      ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"take"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 11 #"food-things"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 8 #"behavior"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"run"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"notice"
0 0 24 3 1 #" "
0 0 14 3 6 #"person"
0 0 24 3 9 #")) )))) )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; Utility procedures"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";;; this next procedure is useful for moving around"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-loop"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"print"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"exits"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"?  > \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"dir"
0 0 24 3 2 #" ("
0 0 14 3 4 #"read"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"stop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 5 #"print"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 14 3 3 #"dir"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 8 #"       ("
0 0 14 3 9 #"move-loop"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; One-way paths connect individual places."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"can-go"
0 0 24 3 1 #" "
0 0 14 3 4 #"from"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 4 #"from"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 12 #"new-neighbor"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"announce-take"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 8 #"\" took \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"name"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"newline"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"announce-move"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 9 #"old-place"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-place"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 14 #"\" moved from \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 9 #"old-place"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"name"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 6 #"\" to \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-place"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"name"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"newline"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"have-fit"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Yaaah! \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"name"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 12 #"\" is upset!\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"newline"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"pick-random"
0 0 24 3 1 #" "
0 0 14 3 3 #"set"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"nth"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 3 #"set"
0 0 24 3 3 #")) "
0 0 14 3 3 #"set"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"delete"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #" "
0 0 14 3 5 #"stuff"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 5 #"stuff"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"stuff"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stuff"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"stuff"
0 0 24 3 3 #") ("
0 0 14 3 6 #"delete"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"stuff"
0 0 24 3 7 #")))) ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"person?"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 10 #"procedure?"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 7 #"member?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"type"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 6 #"person"
0 0 24 3 1 #" "
0 0 14 3 6 #"police"
0 0 24 3 1 #" "
0 0 14 3 5 #"thief"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"thing?"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 10 #"procedure?"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ask"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"type"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 5 #"thing"
0 0 24 3 3 #")))"
0           0 0           0
